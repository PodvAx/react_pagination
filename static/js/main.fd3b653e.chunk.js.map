{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","isFirstPage","isLastPage","Math","ceil","pagesArr","className","cn","disabled","href","onClick","map","active","items","App","useState","selectedCountPerPage","setSelectedCountPerPage","setCurrentPage","navigate","useNavigate","location","useLocation","useEffect","searchParams","URLSearchParams","search","page","get","firstItemIndex","lastItemIndex","length","getLastItemIndexOnPage","id","value","onChange","event","newCountPerPage","target","htmlFor","filter","_","index","item","ReactDOM","render","document","getElementById"],"mappings":"yMAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,4BCIIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAA8B,IAAhBF,EACdG,EAAaH,IAAgBI,KAAKC,KAAKP,EAAQC,GAE/CO,EAAWf,EACf,EACAa,KAAKC,KAAKP,EAAQC,IAGpB,OACE,qBAAIQ,UAAU,aAAd,UACE,oBACEA,UAAWC,IACT,YACA,CAAEC,SAAUP,IAHhB,SAME,mBACE,UAAQ,WACRK,UAAU,YACVG,KAAK,QACL,gBAAeR,EACfS,QAAS,WACFT,GACHD,EAAaD,EAAc,IAPjC,oBAcDM,EAASM,KAAI,SAAAjB,GAAC,OACb,oBAEEY,UAAWC,IAAG,YAAa,CAAEK,OAAQlB,IAAMK,IAF7C,SAIE,mBACE,UAAQ,WACRO,UAAU,YACVG,KAAI,WAAMf,GACVgB,QAAS,kBAAMV,EAAaN,IAJ9B,SAMGA,KATEA,MAaT,oBACEY,UAAWC,IACT,YACA,CAAEC,SAAUN,IAHhB,SAME,mBACE,UAAQ,WACRI,UAAU,YACVG,KAAK,QACL,gBAAeP,EACfQ,QAAS,WACFR,GACHF,EAAaD,EAAc,IAPjC,wBCzDFc,EAAQvB,EAJY,EACF,IAIrBqB,KAAI,SAAAjB,GAAC,qBAAYA,MAEPoB,EAAgB,WAC3B,MAAwDC,mBAAS,KAAjE,mBAAOC,EAAP,KAA6BC,EAA7B,KACA,EAAsCF,mBAAS,GAA/C,mBAAOhB,EAAP,KAAoBmB,EAApB,KAEMC,EAAWC,cACXC,EAAWC,cAEjBC,qBAAU,WACR,IAAMC,EAAe,IAAIC,gBAAgBJ,EAASK,QAC5CC,EAAOH,EAAaI,IAAI,QACxB9B,EAAU0B,EAAaI,IAAI,WAE7BD,GACFT,GAAgBS,GAGd7B,GACFmB,EAAwBnB,KAEzB,CAACuB,EAASK,SAEb,IAwBMG,GAAyC9B,EAX9B,IAAMiB,EAYjBc,EATyB,SAACH,GAC9B,OAAIA,GAAQX,EAAuBH,EAAMkB,OAChClB,EAAMkB,OAGRJ,GAAQX,EAIKgB,CAAuBjC,GAE7C,OACE,sBAAKO,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,SACG,eAAQP,EAAR,sBACW8B,EAAiB,EAD5B,iBAEIC,EAFJ,eAEwBjB,EAAMkB,OAF9B,OAKH,sBAAKzB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACR2B,GAAG,kBACH3B,UAAU,eACV4B,MAAOlB,EACPmB,SAtCiB,SAACC,GAC1B,IAAMC,EAAkBD,EAAME,OAAOJ,MAErCf,EAAS,mBAAD,OAAoBkB,KA8BtB,UAOE,wBAAQH,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOK,QAAQ,kBAAkBjC,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACET,MAAOgB,EAAMkB,OACbjC,SAAUkB,EACVjB,YAAaA,EACbC,aA9DmB,SAAC2B,GACpBA,IAAS5B,GACXoB,EAAS,SAAD,OAAUQ,EAAV,oBAA0BX,OA+DlC,6BACGH,EACE2B,QAAO,SAACC,EAAGC,GACV,OAAOA,GAASb,GACba,EAAQZ,KAEZnB,KAAI,SAAAgC,GAAI,OACP,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,YCxGnBC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.fd3b653e.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ninterface Props {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n}\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const isFirstPage = currentPage === 1;\n  const isLastPage = currentPage === Math.ceil(total / perPage);\n\n  const pagesArr = getNumbers(\n    1,\n    Math.ceil(total / perPage),\n  );\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={cn(\n          'page-item',\n          { disabled: isFirstPage },\n        )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={isFirstPage}\n          onClick={() => {\n            if (!isFirstPage) {\n              onPageChange(currentPage - 1);\n            }\n          }}\n        >\n          «\n        </a>\n      </li>\n      {pagesArr.map(n => (\n        <li\n          key={n}\n          className={cn('page-item', { active: n === currentPage })}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${n}`}\n            onClick={() => onPageChange(n)}\n          >\n            {n}\n          </a>\n        </li>\n      ))}\n      <li\n        className={cn(\n          'page-item',\n          { disabled: isLastPage },\n        )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={isLastPage}\n          onClick={() => {\n            if (!isLastPage) {\n              onPageChange(currentPage + 1);\n            }\n          }}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","// import cn from 'classnames';\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst START_COUNT_ITEMS = 1;\nconst END_COUNT_ITEMS = 42;\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(START_COUNT_ITEMS, END_COUNT_ITEMS)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [selectedCountPerPage, setSelectedCountPerPage] = useState('5');\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useEffect(() => {\n    const searchParams = new URLSearchParams(location.search);\n    const page = searchParams.get('page');\n    const perPage = searchParams.get('perPage');\n\n    if (page) {\n      setCurrentPage(+page);\n    }\n\n    if (perPage) {\n      setSelectedCountPerPage(perPage);\n    }\n  }, [location.search]);\n\n  const handlePageChange = (page: number) => {\n    if (page !== currentPage) {\n      navigate(`?page=${page}&perPage=${selectedCountPerPage}`);\n    }\n  };\n\n  const handleSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const newCountPerPage = event.target.value;\n\n    navigate(`?page=1&perPage=${newCountPerPage}`);\n  };\n\n  const getFirstItemIndexOnPage = (page: number) => {\n    return (page - 1) * +selectedCountPerPage;\n  };\n\n  const getLastItemIndexOnPage = (page: number) => {\n    if (page * +selectedCountPerPage > items.length) {\n      return items.length;\n    }\n\n    return page * +selectedCountPerPage;\n  };\n\n  const firstItemIndex = getFirstItemIndexOnPage(currentPage);\n  const lastItemIndex = getLastItemIndexOnPage(currentPage);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} `\n        + `(items ${firstItemIndex + 1} - `\n        + `${lastItemIndex} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={selectedCountPerPage}\n            onChange={handleSelectChange}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={+selectedCountPerPage}\n        currentPage={currentPage}\n        onPageChange={handlePageChange}\n      />\n\n      <ul>\n        {items\n          .filter((_, index) => {\n            return index >= firstItemIndex\n            && index < lastItemIndex;\n          })\n          .map(item => (\n            <li\n              key={item}\n              data-cy=\"item\"\n            >\n              {item}\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}